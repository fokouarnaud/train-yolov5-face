#!/usr/bin/env python3
"""
Script de validation des configurations ADYOLOv5-Face
V√©rifie que les param√®tres correspondent bien aux configurations d√©finies
"""

import os
import sys

def validate_configurations():
    """Valide les configurations disponibles"""
    print("üîç Validation des configurations ADYOLOv5-Face...")
    
    try:
        from config import DEFAULT_TRAINING, MEMORY_OPTIMIZED_TRAINING, MODEL_CONFIGS
        
        print("\nüìä Configurations disponibles:")
        
        # Configuration par d√©faut (article)
        print("\n‚úÖ Configuration par d√©faut (conforme √† l'article):")
        print(f"   - Batch size: {DEFAULT_TRAINING['batch_size']}")
        print(f"   - Epochs: {DEFAULT_TRAINING['epochs']}")
        print(f"   - Image size: {DEFAULT_TRAINING['img_size']}")
        
        # Configuration optimis√©e m√©moire
        print("\n‚úÖ Configuration optimis√©e m√©moire:")
        print(f"   - Batch size: {MEMORY_OPTIMIZED_TRAINING['batch_size']}")
        print(f"   - Epochs: {MEMORY_OPTIMIZED_TRAINING['epochs']}")
        print(f"   - Image size: {MEMORY_OPTIMIZED_TRAINING['img_size']}")
        
        # Configuration ADYOLOv5
        ad_config = MODEL_CONFIGS.get('ad', {})
        print("\n‚úÖ Configuration mod√®le ADYOLOv5:")
        print(f"   - YAML: {ad_config.get('yaml', 'N/A')}")
        print(f"   - Weights: {ad_config.get('weights', 'N/A')}")
        print(f"   - Image size: {ad_config.get('img_size', 'N/A')}")
        
        return True
        
    except ImportError as e:
        print(f"‚ùå Erreur d'import: {e}")
        return False
    except Exception as e:
        print(f"‚ùå Erreur: {e}")
        return False

def check_hyperparameters_file():
    """V√©rifie que le fichier hyperparam√®tres de l'article existe"""
    print("\nüîç V√©rification du fichier hyperparam√®tres...")
    
    hyp_file = "../yolov5-face/data/hyp.adyolo.paper.yaml"
    
    if os.path.exists(hyp_file):
        print(f"‚úÖ Fichier trouv√©: {hyp_file}")
        
        # Lire quelques param√®tres cl√©s
        try:
            with open(hyp_file, 'r') as f:
                content = f.read()
                
            if "lr0: 0.01" in content:
                print("‚úÖ Learning rate initial: 0.01 (conforme)")
            else:
                print("‚ö†Ô∏è Learning rate initial non conforme")
                
            if "weight_decay: 0.005" in content:
                print("‚úÖ Weight decay: 0.005 (conforme)")
            else:
                print("‚ö†Ô∏è Weight decay non conforme")
                
            return True
            
        except Exception as e:
            print(f"‚ùå Erreur lecture fichier: {e}")
            return False
    else:
        print(f"‚ùå Fichier non trouv√©: {hyp_file}")
        return False

def main():
    """Fonction principale de validation"""
    print("=" * 60)
    print("üîç VALIDATION CONFIGURATIONS ADYOLOv5-Face")
    print("=" * 60)
    
    success = True
    
    # Test 1: Configurations
    if not validate_configurations():
        success = False
    
    # Test 2: Fichier hyperparam√®tres
    if not check_hyperparameters_file():
        success = False
    
    print("\n" + "=" * 60)
    if success:
        print("‚úÖ TOUTES LES VALIDATIONS SONT PASS√âES!")
        print("\nüöÄ Commandes disponibles:")
        print("   # Configuration optimis√©e m√©moire (par d√©faut)")
        print("   python main.py --model-size ad")
        print("")
        print("   # Configuration conforme √† l'article")
        print("   python main.py --model-size ad --paper-config")
    else:
        print("‚ùå CERTAINES VALIDATIONS ONT √âCHOU√â!")
        print("üîß V√©rifiez les erreurs ci-dessus")
    print("=" * 60)

if __name__ == "__main__":
    main()
